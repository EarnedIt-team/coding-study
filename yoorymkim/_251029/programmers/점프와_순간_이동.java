package _251029.programmers;

public class 점프와_순간_이동 {
    public class Solution {
        public int solution(int n) {
            // 일단 무조건 1 가고, 2, 4, .. 2^n씩 가다가 나머지 빼기?
            // 3 갈 경우 에너지-3, 2*3, 4*3, .. (2^n)*3
            // 1 << n -> 비트연산 (2의 n제곱), for문으로 n 최대로 증가시키기 + 전체*a(초기값)로 조율 .. 음

            // n/2 하고 1 될때까지 반복, 나머지 더하기?
            // 5 -> 2 -> 1 -> 0 : 2
            // 6 -> 3 -> 1 -> 0 : 2 (어라 mod..?)
            // 5000 -> 2500 -> 1250 -> 625 -> 312 -> 156 -> 78 -> 39 -> 19 ->
            // 9 -> 4 -> 2 -> 1 -> 0 : 5
            // 역순으로 보면 무조건 1가고, 중간중간 1씩만 점프하는 것과 같다. 최대효율각?

            int ans = 0;
            while (n > 0) {
                if (n%2 == 1) ans++;
                n = n/2;
            }

            return ans;
        }
    }
}
